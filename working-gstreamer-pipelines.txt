H264 over UDP
Send
gst-launch-1.0 -v videotestsrc ! x264enc tune=zerolatency ! rtph264pay ! udpsink host=127.0.0.1 port=25570

Receive
gst-launch-1.0 -v udpsrc port=25570 caps = "application/x-rtp, media=(string)video, clock-rate=(int)90000, encoding-name=(string)H264, payload=(int)96" ! rtph264depay ! decodebin ! videoconvert ! autovideosink

H264 over TCP without packeting

Send (Remote)
gst-launch-1.0 -v videotestsrc ! timeoverlay ! x264enc tune=zerolatency ! tcpclientsink host=127.0.0.1 port=25570

Receiver (if host)
gst-launch-1.0 -v tcpserversrc host=127.0.0.1 port=25570 ! h264parse ! decodebin ! videoconvert ! autovideosink


VP8 over TCP with matroska
Send (Remote)
gst-launch-1.0 -v videotestsrc ! timeoverlay ! vp8enc ! matroskamux ! tcpclientsink host=127.0.0.1 port=25571

Receiver (Server)
gst-launch-1.0 -v tcpserversrc host=127.0.0.1 port=25571 ! matroskademux ! decodebin ! videoconvert ! autovideosink

H264 over RTMP (Server on Nimble)
Sender
gst-launch-1.0 -v videotestsrc ! timeoverlay ! x264enc tune=zerolatency ! flvmux ! rtmpsink location="rtmp://127.0.0.1:25570/live/obs live=1"

Receiver
gst-launch-1.0 -v rtmpsrc location=rtmp://127.0.0.1:25570/live/obs ! decodebin ! videoconvert ! autovideosink

HLS
Send over FFMPEG, POST to remote http server (accepts post requests and saves files)
ffmpeg -re -i lol.mp4 -f hls -method POST http://127.0.0.1:5000/hls/out.m3u8

Send over Gstreamer
gst-launch-1.0 videotestsrc is-live=true ! x264enc ! mpegtsmux ! hlssink max-files=5 target-duration=2 playlist-location="B:/python/gstreamer-ninja/tmp/hls/playlist.m3u8" location=B:/python/gstreamer-ninja/tmp/hls/segment%05d.ts

Receive (alternativ mit local file source)
gst-launch-1.0 souphttpsrc location=http://127.0.0.1:5000/hls/out.m3u8 ! hlsdemux ! decodebin ! videoconvert ! autovideosink

#doesnt work because playlist file gets restricted
gst-launch-1.0 filesrc location=out.m3u8 ! hlsdemux ! decodebin ! autovideosink

DASH
Send
gst-launch-1.0 videotestsrc is-live=true ! x264enc ! dashsink.video_0 dashsink name=dashsink max-files=5 target-duration=2 mpd-root-path=B:/python/gstreamer-ninja/http-server/dash/

Receive
gst-launch-1.0 souphttpsrc location=http://127.0.0.1:5000/dash/dash.mpd ! dashdemux ! decodebin ! videoconvert ! autovideosink